plugins {
	id 'org.springframework.boot' version '2.2.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'io.exp.autoibank.secondarymarket'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}


	implementation group: 'redis.clients', name: 'jedis', version: '3.2.0'

	runtimeOnly project(':npm_FrontEnd')
}
/*
task buildWebApp(type: Exec) {
	println ("Build web app")
	println (project.path + '/../npm_FrontEnd')
    workingDir project.path + '/../npm_FrontEnd'
    commandLine "npm", "run", "build"

    println ("Finish web app")
}

task copyStaticWeb(type: Copy, dependsOn: buildWebApp) {
	println("COpy files")
    doFirst{
        delete "src/main/resources/static/"
    }
    from project.path + "/../npm_FrontEnd/build"
    into "src/main/resources/static"
}*/

test {
	useJUnitPlatform {
		//includeTags 'io.beam.exp.cryptorealtime.model','controllers'
		excludeTags 'integration'
	}
	testLogging.showStandardStreams = true

	testLogging {
		events "passed", "skipped", "failed"
	}
}


task integrationTest(type: Test) {
	useJUnitPlatform {
		includeTags 'integration'
	}
	check.dependsOn it
	shouldRunAfter test
	testLogging.showStandardStreams = true

	testLogging {
		events "passed", "skipped", "failed"
	}
}